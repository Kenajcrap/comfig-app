---
import Body from "@components/Body.astro";
import Footer from "@components/Footer.astro";
import BaseHead from "@components/head/BaseHead.astro";
import ImportHead from "@components/head/ImportHead.astro";
import MainHead from "@components/head/MainHead.astro";
import PreloadHead from "@components/head/PreloadHead.astro";
import NavSelector from "@components/NavSelector.astro";
import ServerFinder from "@components/quickplay/ServerFinder.tsx";
import CustomizeButton from "@components/quickplay/CustomizeButton.tsx";
import Layout from "@layouts/Layout.astro";
import payloadImg from "@img/gamemodes/pl.png";
import kothImg from "@img/gamemodes/koth.png";
import adImg from "@img/gamemodes/ad.png";
import ctfImg from "@img/gamemodes/ctf.png";
import cpImg from "@img/gamemodes/cp.png";
import plrImg from "@img/gamemodes/plr.png";
import miscImg from "@img/gamemodes/sd.png";
import randomImg from "@img/gamemodes/random.png";

const gamemodesPending = [
  {
    name: "Random",
    code: "any",
    description: "We'll match you into the best game we can find.",
    skill: 2,
    img: randomImg,
  },
  {
    name: "Payload",
    code: "payload",
    description: "BLU pushes the cart down the track. RED need to stop them.",
    skill: 0,
    img: payloadImg,
  },
  {
    name: "King of the Hill",
    code: "koth",
    description: "One team must control a single point until time runs out.",
    skill: 0,
    img: kothImg,
  },
  {
    name: "Attack / Defense",
    code: "attack_defense",
    description: "BLU wins by capturing all points. RED wins by stopping them.",
    skill: 0,
    img: adImg,
  },
  {
    name: "Capture the Flag",
    code: "ctf",
    description: "And by flag we mean a glowing briefcase.",
    skill: 1,
    img: ctfImg,
  },
  {
    name: "Capture Points",
    code: "capture_point",
    description: "Capture all points to win.",
    skill: 1,
    img: cpImg,
  },
  {
    name: "Payload Race",
    code: "payload_race",
    description: "Two teams. Two bombs. Two tracks. Hilarity ensues.",
    skill: 1,
    img: plrImg,
  },
  {
    name: "Misc",
    code: "alternative",
    description: "Game modes that don't fit into one of the other categories.",
    skill: 2,
    img: miscImg,
  },
];

const gamemodes = [gamemodesPending[0]];
---

<Layout>
  <head>
    <BaseHead />
    <PreloadHead>
      <link rel="preload" as="image" href={payloadImg.src} />
      <link rel="preload" as="image" href={kothImg.src} />
      <link rel="preload" as="image" href={adImg.src} />
      <link rel="preload" as="image" href={ctfImg.src} />
      <link rel="preload" as="image" href={cpImg.src} />
      <link rel="preload" as="image" href={plrImg.src} />
      <link rel="preload" as="image" href={miscImg.src} />
      <link rel="preload" as="image" href={randomImg.src} />
    </PreloadHead>
    <ImportHead>
      <style>
        .quickplay-section {
          max-width: 100vw;
        }
        @media (min-height: 602px) and (min-width: 921px) {
          .carousel {
            min-height: 64vh;
          }
          .quickplay-container {
            min-width: 85vh;
          }
          .quickplay-section {
            width: 85vh;
          }
        }
        @media (min-width: 921px) {
          #gm-desc {
            margin-top: -3rem;
          }
        }
        .carousel-item {
          transition: none !important;
        }
        .carousel .carousel-control-prev-icon.carousel-dark-buttons,
        .carousel .carousel-control-next-icon.carousel-dark-buttons {
          filter: invert(1) grayscale(100) !important;
        }
      </style>
      <script>
        import { Carousel } from "bootstrap";

        import useQuickplayStore from "@store/quickplay";

        document.addEventListener("astro:page-load", () => {
          const codeLookup = [
            "any",
            "payload",
            "koth",
            "attack_defense",
            "ctf",
            "capture_point",
            "payload_race",
            "alternative",
          ];
          const carouselEl = document.getElementById("quickplayGamemodes");
          let carousel: Carousel | null = null;
          function refreshCarousel() {
            if (carouselEl) {
              carousel = new Carousel(carouselEl);
              carouselEl.addEventListener("slide.bs.carousel", (event) => {
                const code = codeLookup[event.to];
                useQuickplayStore.getState().setGamemode(code);
              });
            }
          }
          refreshCarousel();
          const playNow = document.getElementById(
            "quickplay-now",
          ) as HTMLButtonElement;
          if (carouselEl) {
            carouselEl.addEventListener("finished-searching", () => {
              refreshCarousel();
              if (playNow) {
                playNow.innerText = "TRY AGAIN";
                playNow.disabled = false;
              }
            });
          }
          if (playNow) {
            playNow.addEventListener("click", () => {
              if (useQuickplayStore.getState().searching) {
                return;
              }
              playNow.disabled = true;
              useQuickplayStore.getState().setSearching(1);
              useQuickplayStore.getState().setFound(0);
              if (carousel) {
                carousel.dispose();
                carousel = null;
              }
            });
          }
        });
      </script>
    </ImportHead>
    <MainHead
      title="comfig quickplay"
      description="Quickplay is BACK! Find the best community matches quickly and easily with comfig quickplay, a reimplementation of the old TF2 quickplay system, right in your browser."
    />
  </head>
  <Body>
    <nav class="navbar navbar-expand-sm sticky-top navbar-dark bg-teal">
      <div class="container g-0">
        <span class="navbar-brand">
          <img
            src="/img/mastercomfig_logo_transparent_i.svg"
            alt=""
            class="d-inline-block align-text-top"
            width="24"
            height="24"
          />
          <span class="d-none d-md-inline"> comfig</span>
        </span>
        <button
          class="navbar-toggler"
          type="button"
          data-bs-toggle="collapse"
          data-bs-target="#navbarNav"
          aria-controls="navbarNav"
          aria-expanded="false"
          aria-label="Toggle navigation"
        >
          <span class="navbar-toggler-icon"></span>
        </button>
        <NavSelector pageName="quickplay" />
        <div class="collapse navbar-collapse"></div>
      </div>
    </nav>
    <section class="container quickplay-container pt-2 pb-4 bg-dark">
      <div
        class="d-flex align-items-center justify-content-center"
        style="height: 100%"
      >
        <div class="align-middle text-center">
          <div
            id="quickplayGamemodes"
            class="carousel quickplay-section carousel-light slide carousel-fade p-4"
            style="background: #ece9d7"
          >
            <ServerFinder client:load />
            <div class="carousel-indicators carousel-hidable d-none">
              {
                gamemodes.map((resource, index) => (
                  <button
                    type="button"
                    data-bs-target="#hudScreenshots"
                    data-bs-slide-to={index}
                    class={`${index == 0 ? "active" : ""}`}
                    aria-current="true"
                    aria-label={`Slide ${index + 1} ${resource}`}
                  />
                ))
              }
            </div>
            <div class="carousel-inner h-100">
              {
                gamemodes.map((resource, index) => (
                  <div
                    class={`carousel-item h-100 ${index == 0 ? "active" : ""}`}
                  >
                    <div
                      class="h-100 d-flex flex-column justify-content-between"
                      style={`background-image: url('${resource.img.src}'); background-position: center; background-size: contain;background-repeat: no-repeat;width: 100%;aspect-ratio: 4 / 3`}
                    >
                      <h2
                        class="display-2"
                        style="color: #915315; font-weight: 700; letter-spacing: 0.2rem"
                      >
                        {resource.name}
                      </h2>
                    </div>
                    <div style="color: #2b2f32">
                      <p
                        id="gm-desc"
                        class="lead mb-0"
                        style="font-size: 2.5rem"
                      >
                        <strong>{resource.description}</strong>
                      </p>
                      <div
                        class="text-danger-emphasis"
                        style="font-size: 1.2rem"
                      >
                        {resource.skill === 0 && (
                          <p class="m-0">Recommended For All Skill Levels</p>
                        )}
                        {resource.skill === 1 && (
                          <p class="m-0">Recommended For Advanced Players</p>
                        )}
                        {resource.skill === 2 && (
                          <p class="m-0">Recommended For Expert Players</p>
                        )}
                      </div>
                    </div>
                  </div>
                ))
              }
            </div>
            {
              gamemodes.length > 1 && (
                <>
                  <button
                    class="carousel-control-prev carousel-hidable"
                    type="button"
                    data-bs-target="#quickplayGamemodes"
                    data-bs-slide="prev"
                  >
                    <span
                      class="carousel-control-prev-icon carousel-dark-buttons"
                      aria-hidden="true"
                    />
                    <span class="visually-hidden">Previous</span>
                  </button>
                  <button
                    class="carousel-control-next carousel-hidable"
                    type="button"
                    data-bs-target="#quickplayGamemodes"
                    data-bs-slide="next"
                  >
                    <span
                      class="carousel-control-next-icon carousel-dark-buttons"
                      aria-hidden="true"
                    />
                    <span class="visually-hidden">Next</span>
                  </button>
                </>
              )
            }
          </div>
          <div class="row g-0">
            <div class="col">
              <button
                id="quickplay-now"
                class="btn btn-success w-100"
                style="font-size: 2.5rem; font-weight: 800">PLAY NOW!</button
              >
            </div>
            <!--<div class="col">
              <button
                class="btn btn-dark w-100"
                style="font-size: 2.5rem; font-weight: 600">SHOW SERVERS</button
              >
            </div>-->
          </div>
          <!--<br />
          <button
            class="btn btn-dark w-100"
            style="font-size: 2.5rem; font-weight: 800">Customize</button
        >-->
        </div>
      </div>
      <br />
      <div class="container px-0 quickplay-section">
        <CustomizeButton client:load />
      </div>
    </section>
    <section class="container bg-secondary-subtle mt-5 mb-4 px-5 pt-5 pb-2">
      <h1 class="display-3 text-center fw-bold">FAQ</h1>
      <h2 class="display-6 fw-bold">What is this?</h2>
      <p class="lead">
        This is a best attempt at recreating the old in-game Quickplay feature
        as accurately as possible, and updating it to work in the current times
        and in browser. It is merely an experimental proof of concept now, but
        will continue to improve over the coming weeks!
      </p>

      <h2 class="display-6 fw-bold">How do I report a problem?</h2>
      <p class="lead">
        Join us <a href="https://discord.gg/mastercomfig-389089828249010188"
          >on Discord</a
        > and report your issues to the <span class="text-bg-primary p-1 mx-1"
          >#tf2-quickplay</span
        > channel. We welcome feedback from both players and server owners!
      </p>

      <h2 class="display-6 fw-bold">Why only random? Why no options?</h2>
      <p class="lead">
        As we scale the quickplay algorithm and surface issues from broader
        usage, we will be slowly introducing features over time to make sure
        everyone has a smooth experience!
      </p>

      <h2 class="display-6 fw-bold">How does this work?</h2>
      <p class="lead">
        Servers which are selected for the quickplay pool are then searched
        through according to your preferences. You get matched into the server
        with the best score. Servers are scored according to player counts and
        estimated ping/region to be ideal for the player searching, as well as a
        reputation bonus.
      </p>

      <h2 class="display-6 fw-bold">How are servers selected?</h2>
      <p class="lead">
        As we are trying to recreate quickplay, we use as similar as possible
        criteria for selecting servers for quickplay. Here are the requirements
        to be eligible for quickplay:
      </p>
      <ul>
        <li>
          Servers must be listed on the server browser, and must not use strict
          matchmaking.
        </li>
        <li>
          Servers must be registered with a
          <a href="https://steamcommunity.com/dev/managegameservers"
            >game server account</a
          >
          tied to an owning Steam account, and log into that account when the server
          boots using <code>sv_setsteamaccount</code>.
        </li>
        <li>Server accounts must be in good standing on Steam.</li>
        <li>Servers should not be password protected.</li>
        <li>Servers must have VAC enabled.</li>
        <li>Servers must have a public, non-SDR IP.</li>
        <li>
          Servers must be running on a dedicated server (srcds, not a listen
          server).
        </li>
        <li>The server must at least have a max player cap of 18.</li>
        <li>The server must be running any active Casual rotation map.</li>
        <li>
          The server must not have the following tags: <code
            >friendlyfire, highlander, trade, noquickplay, hidden</code
          >
        </li>
      </ul>
      <p class="lead">
        Additionally, we delist servers which do not follow the following
        quickplay guidelines:
        <ul>
          <li>
            Servers that violate <a
              href="https://help.steampowered.com/en/faqs/view/6862-8119-C23E-EA7B"
            >
              the community guidelines
            </a> may be delisted.
          </li>
          <li>
            Servers must not actively trick players or lie to them or make it
            difficult for them to find what they are looking for. Servers must
            report accurate information about itself to the Steam infrastructure
            and to clients.
          </li>
          <li>
            All of the information in the server browser must be accurate:
            number of players, number of bots, map, ping, region, etc.
          </li>
          <li>
            Bots must be easily identified by players as bots. Do not give a bot
            an avatar or assign it a ping value.
          </li>
          <li>
            Servers cannot name themselves according to the naming conventions
            used by Valve, or any other server organization.
          </li>
          <li>
            Servers must not be malicious, by exposing clients to malware or
            spyware, or by bypassing <code>cl_disablehtmlmotd</code>.
          </li>
          <li>
            Usage of Roll the Dice (RTD) must be labelled with the <code
              >rtd</code
            > tag.
          </li>
          <li>
            Usage of any class limits must be labelled with the <code
              >classlimits</code
            > tag.
          </li>
          <li>
            Banning any class limits must be labelled with the <code
              >classbans</code
            > tag.
          </li>
          <li>
            The engine uses tags to communicate to clients that certain
            modifications are in effect. Servers must use these tags properly.
            If a server makes these modifications using built-in engine
            functionality, they will be set automatically, and all a server
            needs to do is make sure they don't actively block them from
            working. However, if the server uses a plugin to make gameplay
            modifications with very similar effects, it is THEIR responsibility
            to ensure that the tags are set. Players do not care how the
            gameplay modification was implemented, they just want to know
            whether it is active or not.
          </li>
          <li>
            Here are some examples of tags that must be set accurately:
            <code
              >friendlyfire, respawntimes, norespawntime, increased_maxplayers,
              nocrits, dmgspread, highlander</code
            >
          </li>
        </ul>
      </p>
      <p class="lead">
        Servers must generally follow default TF2 gameplay rules (excluding a
        few preference-based exceptions), without adverse modifications which
        players looking for an unmodified casual experience do not want. These
        server modifications are not allowed for servers in quickplay. If a
        server has any of these modifications, the server owner can opt out of
        the quickplay pool. The easiest way to remove a server from quickplay is
        to set <code>tf_server_identity_disable_quickplay 1</code>. Any server
        in the quickplay pool found to be using these modifications will be
        delisted until it is compliant.
      </p>
      <ul>
        <li>Opening a MOTD window (hidden or visible) that is not requested</li>
        <li>Forcing clients to view the MOTD until a timer has expired</li>
        <li>Browser popups</li>
        <li>Giving or selling gameplay advantage to players</li>
        <li>Kicking players to make room for reserved slots</li>
        <li>Modifying stock maps, models, or materials</li>
        <li>
          Granting or modifying economy items, or taking actions that devalue
          players' items, or interfering with the TF2 economy
        </li>
        <li>
          Running non-default game modes: prop hunt, dodgeball, class wars,
          randomizer, engineer fortress, etc
        </li>
        <li>
          Running non-default addons like roll the dice (RTD), custom weapons,
          x10, all crits, etc
        </li>
      </ul>

      <h2 class="display-6 fw-bold">What is reputation?</h2>
      <p class="lead">
        Reputation is a matchmaking metric given to servers if players are shown
        to enjoy them. It is a small part of the overall scoring system used to
        match servers with players.
      </p>
    </section>
    <Footer />
  </Body>
</Layout>
