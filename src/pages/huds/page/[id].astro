---
import Layout from '../../../layouts/Layout.astro';
import BaseHead from '../../../components/head/BaseHead.astro';
import PreloadHead from '../../../components/head/PreloadHead.astro';
import ImportHead from '../../../components/head/ImportHead.astro';
import MainHead from '../../../components/head/MainHead.astro';
import Body from '../../../components/Body.astro';
import Footer from '../../../components/Footer.astro';
import HudListItem from '../../../components/huds/HudListItem.astro';
import HudNav from '../../../components/huds/HudNav.astro';

import { fetchHuds } from '../../../ssg/huds';

import { Markdown } from 'astro-remote';

export async function getStaticPaths() {
  return (await fetchHuds(true)).map((hud) => ({
    params: {
      id: hud.id
    },
    props: { hud },
  }));
}

const { hud } = Astro.props;
---
<Layout>
<head>
  <BaseHead />
  <PreloadHead>
    <></>
  </PreloadHead>
  <ImportHead>
    <script>
      import { Carousel } from "bootstrap";

      const carouselEl = document.getElementById('hudScreenshots');
      if (carouselEl) {
        const carousel = new Carousel(carouselEl);
      }
    </script>
    <script>
      import { Tooltip } from "bootstrap";

      const tooltipTriggerList = document.querySelectorAll('[data-bs-toggle="tooltip"]');
      const tooltipList = [...tooltipTriggerList].map(tooltipTriggerEl => new Tooltip(tooltipTriggerEl));
    </script>
  </ImportHead>
  <MainHead title={`${hud.name} | comfig huds`} description={`${hud.name} on comfig huds, a modern Team Fortress 2 HUD directory.`}>
    <></>
  </MainHead>
  <style>
    .carousel {
      aspect-ratio: 16 / 9;
    }
    .list-group {
      --bs-list-group-bg: #151515;
      --bs-list-group-color: #f2f2f2;
      background: #0d0d0d;
      flex: 1;
    }
  </style>
</head>
<Body>
  <HudNav />
  <div class="container">
    <h1 class="display-1 mt-3">{hud.name} <span class="text-muted display-4">by {hud.author}</span></h1>
    {(hud.resources.length > 1 && (
      <div id="hudScreenshots" class="carousel slide">
        <div class="carousel-indicators">
          {hud.resources.map((resource, index) =>
            <button type="button" data-bs-target="#hudScreenshots" data-bs-slide-to={index} class={index == 0 ? "active" : ""} aria-current="true" aria-label={`Slide ${index + 1} ${resource}`}></button>
          )}
        </div>
        <div class="carousel-inner">
          {hud.resourceUrls.map((resource, index) =>
            <div class={`carousel-item ${index == 0 ? "active" : ""}`}>
              {
                (resource.startsWith("https://youtube.com/") && (
                  <iframe width="100%" height="100%" src={resource} title={`${hud.resources[index]}`} frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
                )) || (<img src={resource} class="d-block w-100" loading="lazy" alt={`${hud.resources[index]}`} />)
              }
            </div>)
          }
        </div>
        <button class="carousel-control-prev" type="button" data-bs-target="#hudScreenshots" data-bs-slide="prev">
          <span class="carousel-control-prev-icon" aria-hidden="true"></span>
          <span class="visually-hidden">Previous</span>
        </button>
        <button class="carousel-control-next" type="button" data-bs-target="#hudScreenshots" data-bs-slide="next">
          <span class="carousel-control-next-icon" aria-hidden="true"></span>
          <span class="visually-hidden">Next</span>
        </button>
      </div>
    )) || (<img class="img-fluid" src={hud.resourceUrls[0]} />)}
    <a href={hud.downloadUrl} class="btn btn-secondary w-100 my-3"><span class="fas fa-download fa-fw"></span> Download</a>
    <div class="row flex-md-row-reverse align-items-stretch">
      <div class={hud.content ? "col-md-3 d-md-flex flex-md-column" : ""}>
        <ul class="list-group list-group-flush">
          <li class="list-group-item">
            <span class={`fas ${hud.prerelease ? "fa-flask text-warning" : "fa-circle-check text-success"} fa-fw`}></span> <strong>Release status:</strong> {hud.prerelease ? "Preview" : "Stable"}
          </li>
          <li class="list-group-item">
            <span class={`fas ${hud.outdated ? "fa-circle-exclamation text-danger" : "fa-circle-check text-success"} fa-fw`}></span> <strong>Compatibility:</strong> {hud.outdated ? "Outdated/Incompatible" : "Up to date"}
          </li>
          {hud.social?.album && (<a href={hud.social.album} class="list-group-item d-flex justify-content-between align-items-center">
            <span><span class="fas fa-images fa-fw"></span> Screenshot Album</span>
            <span class="fas fa-square-arrow-up-right fa-fw"></span>
          </a>)}
          <a href={`${hud.repo}/tree/${hud.hash}`} class="list-group-item d-flex justify-content-between align-items-center">
            <span><span class="fab fa-github fa-fw"></span> GitHub</span>
            <span class="fas fa-square-arrow-up-right fa-fw"></span>
          </a>
          {hud.social?.discord && (<a href={`https://discord.gg/${hud.social.discord}`} class="list-group-item d-flex justify-content-between align-items-center">
            <span><span class="fab fa-discord fa-fw"></span> Discord</span>
            <span class="fas fa-square-arrow-up-right fa-fw"></span>
          </a>)}
          {hud.social?.steam_group && (<a href={`https://steamcommunity.com/groups/${hud.social.steam_group}`} class="list-group-item d-flex justify-content-between align-items-center">
            <span><span class="fab fa-steam fa-fw"></span> Steam Group</span>
            <span class="fas fa-square-arrow-up-right fa-fw"></span>
          </a>)}
          {hud.social?.steam_profile && (<a href={`https://steamcommunity.com/profiles/${hud.social.steam_profile}`} class="list-group-item d-flex justify-content-between align-items-center">
            <span><span class="fab fa-steam fa-fw"></span> Author Steam</span>
            <span class="fas fa-square-arrow-up-right fa-fw"></span>
          </a>)}
          {hud.social?.twitter && (<a href={`https://twitter.com/${hud.social.twitter}`} class="list-group-item d-flex justify-content-between align-items-center">
            <span><span class="fab fa-twitter fa-fw"></span> Twitter</span>
            <span class="fas fa-square-arrow-up-right fa-fw"></span>
          </a>)}
          {hud.contributors && (<li class="list-group-item">
            <strong>Contributors:</strong> {hud.contributors.join(", ")}
          </li>)}
        </ul>
      </div>
      {hud.content && (<div class="col-md-9"><Markdown content={hud.content} /></div>)}
    </div>
    {hud.variants && (
      <br><h1>Variants</h1>
      <div class="row">
        {hud.variants.map((variant) =>
          <div class="col-12 col-md-2 col-lg-4 mt-3">
            <HudListItem hud={variant}></HudListItem>
          </div>)}
      </div>
    )}
    <hr>
  </div>
  <Footer>
    <></>
  </Footer>
</Body>
</Layout>
